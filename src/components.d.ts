/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface HsButton {
        "size": string;
        "variant": string;
    }
    interface HsHeader {
        /**
          * Component public properties begin here. These can be recognized by the @Prop decorator. The truthy 'reflect' property of the decorator object payload ensures that such property will be also available in HTML, and not just when consuming Stencil components from other components.
         */
        "level": 1 | 2 | 3 | 4 | 5 | 6;
        "textAlign": 'left' | 'right' | 'center';
    }
}
export interface HsButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLHsButtonElement;
}
declare global {
    interface HTMLHsButtonElement extends Components.HsButton, HTMLStencilElement {
    }
    var HTMLHsButtonElement: {
        prototype: HTMLHsButtonElement;
        new (): HTMLHsButtonElement;
    };
    interface HTMLHsHeaderElement extends Components.HsHeader, HTMLStencilElement {
    }
    var HTMLHsHeaderElement: {
        prototype: HTMLHsHeaderElement;
        new (): HTMLHsHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "hs-button": HTMLHsButtonElement;
        "hs-header": HTMLHsHeaderElement;
    }
}
declare namespace LocalJSX {
    interface HsButton {
        "onClicked"?: (event: HsButtonCustomEvent<any>) => void;
        "size"?: string;
        "variant"?: string;
    }
    interface HsHeader {
        /**
          * Component public properties begin here. These can be recognized by the @Prop decorator. The truthy 'reflect' property of the decorator object payload ensures that such property will be also available in HTML, and not just when consuming Stencil components from other components.
         */
        "level"?: 1 | 2 | 3 | 4 | 5 | 6;
        "textAlign"?: 'left' | 'right' | 'center';
    }
    interface IntrinsicElements {
        "hs-button": HsButton;
        "hs-header": HsHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hs-button": LocalJSX.HsButton & JSXBase.HTMLAttributes<HTMLHsButtonElement>;
            "hs-header": LocalJSX.HsHeader & JSXBase.HTMLAttributes<HTMLHsHeaderElement>;
        }
    }
}
