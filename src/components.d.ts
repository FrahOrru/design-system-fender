/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface HsButton {
        "size": string;
        "variant": string;
    }
    interface HsFlex {
        "direction": "row" | "column";
        "spacing": "between" | "around" | "evenly" | number;
        "xAlign": "center" | "start" | "end";
        "yAlign": "center" | "start" | "end";
    }
    interface HsGrid {
        "columns": number;
    }
    interface HsGridColumn {
    }
    interface HsHeader {
        /**
          * The `level` property allows users to indicate what header hierarchy this element is. It mus take a number from `1` to `6`.
         */
        "level": number;
        /**
          * Provides support for implementing horizontal alignment to the text contained in the header.
         */
        "textAlign": 'left' | 'right' | 'center';
    }
}
export interface HsButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLHsButtonElement;
}
declare global {
    interface HTMLHsButtonElement extends Components.HsButton, HTMLStencilElement {
    }
    var HTMLHsButtonElement: {
        prototype: HTMLHsButtonElement;
        new (): HTMLHsButtonElement;
    };
    interface HTMLHsFlexElement extends Components.HsFlex, HTMLStencilElement {
    }
    var HTMLHsFlexElement: {
        prototype: HTMLHsFlexElement;
        new (): HTMLHsFlexElement;
    };
    interface HTMLHsGridElement extends Components.HsGrid, HTMLStencilElement {
    }
    var HTMLHsGridElement: {
        prototype: HTMLHsGridElement;
        new (): HTMLHsGridElement;
    };
    interface HTMLHsGridColumnElement extends Components.HsGridColumn, HTMLStencilElement {
    }
    var HTMLHsGridColumnElement: {
        prototype: HTMLHsGridColumnElement;
        new (): HTMLHsGridColumnElement;
    };
    interface HTMLHsHeaderElement extends Components.HsHeader, HTMLStencilElement {
    }
    var HTMLHsHeaderElement: {
        prototype: HTMLHsHeaderElement;
        new (): HTMLHsHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "hs-button": HTMLHsButtonElement;
        "hs-flex": HTMLHsFlexElement;
        "hs-grid": HTMLHsGridElement;
        "hs-grid-column": HTMLHsGridColumnElement;
        "hs-header": HTMLHsHeaderElement;
    }
}
declare namespace LocalJSX {
    interface HsButton {
        "onClicked"?: (event: HsButtonCustomEvent<any>) => void;
        "size"?: string;
        "variant"?: string;
    }
    interface HsFlex {
        "direction"?: "row" | "column";
        "spacing"?: "between" | "around" | "evenly" | number;
        "xAlign"?: "center" | "start" | "end";
        "yAlign"?: "center" | "start" | "end";
    }
    interface HsGrid {
        "columns"?: number;
    }
    interface HsGridColumn {
    }
    interface HsHeader {
        /**
          * The `level` property allows users to indicate what header hierarchy this element is. It mus take a number from `1` to `6`.
         */
        "level"?: number;
        /**
          * Provides support for implementing horizontal alignment to the text contained in the header.
         */
        "textAlign"?: 'left' | 'right' | 'center';
    }
    interface IntrinsicElements {
        "hs-button": HsButton;
        "hs-flex": HsFlex;
        "hs-grid": HsGrid;
        "hs-grid-column": HsGridColumn;
        "hs-header": HsHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hs-button": LocalJSX.HsButton & JSXBase.HTMLAttributes<HTMLHsButtonElement>;
            "hs-flex": LocalJSX.HsFlex & JSXBase.HTMLAttributes<HTMLHsFlexElement>;
            "hs-grid": LocalJSX.HsGrid & JSXBase.HTMLAttributes<HTMLHsGridElement>;
            "hs-grid-column": LocalJSX.HsGridColumn & JSXBase.HTMLAttributes<HTMLHsGridColumnElement>;
            "hs-header": LocalJSX.HsHeader & JSXBase.HTMLAttributes<HTMLHsHeaderElement>;
        }
    }
}
